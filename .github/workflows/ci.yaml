name: CI_Pipeline_Execution

on:
  push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: dvc repro

      - name: Run model tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_model.py

      - name: Run Flask app tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      - name: Promote model to Production
        if: ${{ job.status == 'success' }}
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python scripts/promote_model.py

      # AWS Connection
      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 222634383382.dkr.ecr.ap-south-1.amazonaws.com 
      
      - name: Build Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build -t emotiondetection .

      - name: Tag Docker Image
        run: |
          docker tag emotiondetection:latest 222634383382.dkr.ecr.ap-south-1.amazonaws.com/emotiondetection:latest

      - name: Push Docker Image to AWS ECR
        run: |
          docker push 222634383382.dkr.ecr.ap-south-1.amazonaws.com/emotiondetection:latest

      - name: Pull Docker Image FROM EC2 then Deploy on EC2
        if: ${{ job.status == 'success' }}
        uses: appleboy/ssh-action@v0.1.5
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region ap-south-1
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 222634383382.dkr.ecr.ap-south-1.amazonaws.com  
            
            if [ "$(docker ps -q -f name=shashankraiCICD)" ]; then
              docker stop shashankraiCICD
            fi

            if [ "$(docker ps -aq -f name=shashankraiCICD)" ]; then
              docker rm shashankraiCICD
            fi

            docker run -p ${{ secrets.APP_PORT }}:5000 -e DAGSHUB_PAT=${{ secrets.DAGSHUB_PAT }} --name shashankraiCICD  222634383382.dkr.ecr.ap-south-1.amazonaws.com/emotiondetection:latest

            echo "Deployment complete!"
